#!/bin/bash

# Reset
Color_Off='\033[0m'       # Text Reset

# Regular Colors
Black='\033[0;30m'        # Black
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Yellow='\033[0;33m'       # Yellow
Blue='\033[0;34m'         # Blue
Purple='\033[0;35m'       # Purple
Cyan='\033[0;36m'         # Cyan
White='\033[0;37m'        # White

# Bold
BBlack='\033[1;30m'       # Black
BRed='\033[1;31m'         # Red
BGreen='\033[1;32m'       # Green
BYellow='\033[1;33m'      # Yellow
BBlue='\033[1;34m'        # Blue
BPurple='\033[1;35m'      # Purple
BCyan='\033[1;36m'        # Cyan
BWhite='\033[1;37m'       # White

echo -e "${Blue}Hello! Welcome to Axiom configuration :)"
echo -e "To begin, I will ask you a few questions"
echo -e "Press enter to continue${Color_Off}"
read

echo -e "${BWhite}Installing deps! Please wait :) ${Color_Off}"
BASEOS="`uname`"
case $BASEOS in
  'Linux')
    BASEOS='Linux'
    ;;
  'FreeBSD')
    BASEOS='FreeBSD'
    alias ls='ls -G'
    ;;
  'WindowsNT')
    BASEOS='Windows'
    ;;
  'Darwin') 
    BASEOS='Mac'
    ;;
  'SunOS')
    BASEOS='Solaris'
    ;;
  'AIX') ;;
  *) ;;
esac

if [ $BASEOS == "Linux" ]
then
    OS=$(lsb_release -i | awk '{ print $3 }')
    if [ $OS == "Arch" ]
    then
        echo -e "${Blue}Congrats, you run arch..."
        echo -e "Ok so you need doctl - so get that from the AUR :) yay -S doctl! You're smart! You installed arch! ${Color_Off}"
        sudo pacman -S fzf packer jq
    elif [ $OS == "Ubuntu" ] || [ $OS == "Debian" ]
    then
        sudo wget -O /usr/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 && sudo chmod +x /usr/bin/jq
        wget -O /tmp/packer.zip https://releases.hashicorp.com/packer/1.5.6/packer_1.5.6_linux_amd64.zip && cd /tmp/ && unzip packer.zip && sudo mv packer /usr/bin/
        sudo apt-get update && sudo apt-get install fzf git
        sudo snap install doctl
    fi
fi

#install go
if [[ -z "$GOPATH" ]];then
echo -e "${Blue}It looks like go is not installed, would you like to install it now${Color_Off}"
PS3="Please select an option : "
choices=("yes" "no")
select choice in "${choices[@]}"; do
        case $choice in
                yes)

					echo -e "${Blue}Installing Golang${Color_Off}"
					wget https://dl.google.com/go/go1.13.4.linux-amd64.tar.gz
					sudo tar -xvf go1.13.4.linux-amd64.tar.gz
					sudo mv go /usr/local
					export GOROOT=/usr/local/go
					export GOPATH=$HOME/go
					export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
					echo 'export GOROOT=/usr/local/go' >> ~/.bash_profile
					echo 'export GOPATH=$HOME/go'	>> ~/.bash_profile			
					echo 'export PATH=$GOPATH/bin:$GOROOT/bin:$PATH' >> ~/.bash_profile	
					source ~/.bash_profile
					sleep 1
					break
					;;
				no)
					echo -e "${Red}Please install go and rerun this script"
					echo -e "Aborting installation...${Color_Off}"
					exit 1
					;;
	esac	
done
fi

if [ $BASEOS == "Mac" ]
then
    echo -e "${Blue}Installing packer now...${Color_Off}"
    brew install doctl
    brew install jq
    mkdir -p $(go env GOPATH)/src/github.com/hashicorp && cd $_
    git clone https://github.com/hashicorp/packer.git
    cd packer
    make dev
fi

if [ ! -d ~/.axiom ]
then
    git clone https://github.com/pry0cc/axiom ~/.axiom
else
    cd ~/.axiom && git pull
fi

echo -e "${BBlue}What is your DigitalOcean API key? ${Color_Off}"
echo -e -n "${Blue}Key >> ${Color_Off}"
read do_key
echo -e "${Blue}Setting up doctl!...${Color_Off}"
doctl auth init -t $do_key
echo "What would you like to pick for region? nyc1, ny2, nyc3, sfo1, sfo2, sgp1, fra1, ams1, ams2, ams3, lon1, blr1  <-- Choose the nearest Region to your location"
#region="sfo2"
echo -n "Region >> "
read region
#echo "What domain do you use?"
#echo -n "Domain >> "
#read domain
domain=""
#echo "What is your Hunter key? (optional)"
#echo -n "Key >> "
hunter_key=""
size="s-1vcpu-1gb"

if [ -f ~/.ssh/id_rsa.pub ]
then
    echo -e "${Blue}Detected SSH public key, would you like me to install this for your axiom setup? y/n ${Color_Off}"
    read ans
    if [ $ans == "y" ]
    then
        cat ~/.ssh/id_rsa.pub > ~/.axiom/configs/authorized_keys
    fi
else
    echo -e "${Blue}No SSH public key detected, would you like to generate a fresh pair? y/n ${Color_Off}"
    read ans
    if [ $ans == "y" ]
    then
        ssh-keygen
        cat ~/.ssh/id_rsa.pub > ~/.axiom/configs/authorized_keys
    fi
fi

if [ "$SHELL" == "/usr/local/bin/zsh" ]; then
    echo -e "${Green}You're running ZSH! Installing Axiom to \$PATH...${Color_Off}"
    echo "export PATH=\"\$PATH:\$HOME/.axiom/interact\"" >> ~/.zshrc
    echo "source $HOME/.axiom/functions/autocomplete.zsh" >> ~/.zshrc
    echo "compdef _axiom-ssh axiom-rm" >> ~/.zshrc
    echo "compdef _axiom-ssh axiom-ssh" >> ~/.zshrc
    echo "compdef _axiom-ssh axiom-select" >> ~/.zshrc
    echo "compdef _axiom-ssh axiom-backup" >> ~/.zshrc
    echo "compdef _axiom-ssh axiom-vpn" >> ~/.zshrc
    echo "compdef _axiom-restore axiom-restore" >> ~/.zshrc
    echo "compdef _axiom-deploy axiom-deploy" >> ~/.zshrc
    source ~/.zshrc
elif [ "$SHELL" == "/bin/bash" ]; then
    echo -e "${Green}You're running Bash! Installing Axiom to \$PATH...${Color_Off}"
    echo "export PATH=\"\$PATH:\$HOME/.axiom/interact\"" >> ~/.bashrc
    source ~/.bashrc
else
    echo -e "${Red}I don't have a predefined setup for your shell!"
    echo "Please add ~/.axiom/interact to your \$PATH! ${Color_Off}"
    echo "(export PATH=\"\$PATH:$HOME/.axiom/interact\")"
fi 


echo "{\"do_key\":\"$do_key\", \"region\":\"$region\", \"domain\":\"$domain\", \"default_size\":\"$size\", \"hunter_key\":\"$hunter_key\"}" | jq > ~/.axiom/axiom.json

echo -e "${BWhite}Beginning first packer build...${Color_Off}"
cd ~/.axiom/
packer build -var-file ~/.axiom/axiom.json ~/.axiom/packer.json
cd
